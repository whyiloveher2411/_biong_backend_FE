import { Box, Button, Divider } from '@mui/material'
import FieldForm from 'components/atoms/fields/FieldForm';
import { FieldFormItemProps } from 'components/atoms/fields/type';
import { __ } from 'helpers/i18n';
import useAjax from 'hook/useApi'
import useConfirmDialog from 'hook/useConfirmDialog';
import React from 'react'

function CopyFreecodecampLocal(props: FieldFormItemProps) {

    const useApi = useAjax();

    const totalStep = React.useState(0);
    const html = React.useState('');

    const handleCopyData = () => {
        useApi.ajax({
            url: 'plugin/vn4-e-learning/course-feecodecamp/copy',
            data: {
                id: props.post.id,
            },
            method: 'POST',
            success: (result) => {
                if (result.content) {
                    let item = result.content;
                    navigator.clipboard.writeText(JSON.stringify(item));
                    useApi.showMessage(__('Copied to clipboard.'), 'info');
                }
            }
        })
    }

    const handlePasteData = () => {

        navigator.clipboard.readText()
            .then(text => {
                let itemFromclipboard = JSON.parse(text);
                console.log(itemFromclipboard);

                useApi.ajax({
                    url: 'plugin/vn4-e-learning/course-feecodecamp/paste',
                    data: {
                        id: props.post.id,
                        data: itemFromclipboard,
                    },
                    method: 'POST',
                    success: (result) => {
                        console.log(result);
                    }
                })
            })
            .catch(() => {
                //
            });
    }

    const autoGenerateData = () => {
        useApi.ajax({
            url: 'plugin/vn4-e-learning/course-feecodecamp/auto-generate',
            data: {
                id: props.post.id,
                step: totalStep[0],
            },
            method: 'POST',
            success: (result) => {
                //
            }
        })
    }

    const autoGenerateDataFromHTML = () => {
        useApi.ajax({
            url: 'plugin/vn4-e-learning/course-feecodecamp/auto-generate-html',
            data: {
                id: props.post.id,
                html: html[0],
                step: totalStep[0],
            },
            method: 'POST',
            success: (result) => {
                //
            }
        })
    }

    const confirm = useConfirmDialog({
        title: 'Thêm dữ liệu',
        message: 'Bạn có chắc muốn chỉnh sửa / thêm dữ liệu không?'
    });

    return (<>
        <Button color="inherit" onClick={handleCopyData}>
            Copy data
        </Button>
        <Button variant='outlined' onClick={() => {
            confirm.onConfirm(() => {
                handlePasteData();
            });
        }}>
            paste data from clipboard
        </Button>
        <Divider sx={{ mt: 3, mb: 3, }} />
        <FieldForm
            component='number'
            config={{
                title: 'Total Step'
            }}
            post={{ step: totalStep[0] }}
            name="step"
            onReview={(value) => {
                totalStep[1](value);
            }}
        />
        <Button sx={{ mt: 1, }} variant='outlined' onClick={autoGenerateData}>
            Auto generate data
        </Button>

        <Divider sx={{ mt: 3, mb: 3, }} />
        <Box
            sx={{
                mb: 3,
            }}
        >
            <FieldForm
                component='textarea'
                config={{
                    title: 'HTML Course'
                }}
                post={{ html: html[0] }}
                name="html"
                onReview={(value) => {
                    html[1](value);
                }}
            />
        </Box>

        <Box
            sx={{
                mb: 1,
            }}
        >
            <FieldForm
                component='number'
                config={{
                    title: 'Total Step'
                }}
                post={{ step: totalStep[0] }}
                name="step"
                onReview={(value) => {
                    totalStep[1](value);
                }}
            />
        </Box>
        <Button variant='outlined' onClick={autoGenerateDataFromHTML}>
            Auto generate data from HTML
        </Button>


    </>)
}

export default CopyFreecodecampLocal